<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:config/ehcache.xml"/>
	</bean> 
	
	<bean id="kickoutSessionControlFilter" class="com.jeemgr.shiro.filter.KickoutSessionControlFilter">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>

        <property name="kickoutAfter" value="false"/>
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="/login.jsp"/>
    </bean>
    
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <property name="securityManager" ref="securityManager" />  
	    <property name="loginUrl" value="/login.jsp" />  
<!-- 	    <property name="successUrl" value="/mainframe.jsp" />   -->
	    <property name="unauthorizedUrl" value="/login.jsp" />  
	    <property name="filters">
            <util:map>
                <entry key="authc">
                    <bean class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter"/>
                </entry>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
            </util:map>
        </property>
	    <property name="filterChainDefinitions">  
	        <value>
	            /tJeemgrUser/userLogin.do = anon
	            /index* = authc
	            /include* = authc
	            /changePassword* = authc
	            /** = kickout
	        </value>  
	    </property>  
	</bean>  
  	 <!--安全管理器-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
 	        <property name="realm" ref="LoginUserRealm" />  
	        <property name="sessionManager" ref="sessionManager" /> 
	        <property name="cacheManager" ref="cacheManager" />
	</bean>  
	
	<bean id="LoginUserRealm" class="com.jeemgr.shiro.realm.LoginUserRealm"> <!-- depends-on="tJeemgrSysUserMapper,tJeemgrSysMenuMapper" -->
		<property name="credentialsMatcher" ref="passwordMatcher" />
	</bean>
	
	<bean id="passwordMatcher" class="org.apache.shiro.authc.credential.PasswordMatcher" > 
		<property name="passwordService" ref="passwordService" />
	</bean>

	<bean id="passwordService" class="org.apache.shiro.authc.credential.DefaultPasswordService" > 
		<property name="hashService" ref="hashService" />
		<property name="hashFormatFactory" ref="hashFormatFactory" />
		<property name="hashFormat" ref="hashFormat" />
	</bean>
	
	<bean id="hashService" class="org.apache.shiro.crypto.hash.DefaultHashService" />
	<bean id="hashFormatFactory" class="org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory" />
	<bean id="hashFormat" class="org.apache.shiro.crypto.hash.format.Shiro1CryptFormat" />
	
	<!-- Post processor that automatically invokes init() and destroy() methods -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000"/>
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionIdCookie" ref="simpleCookie"/>
	</bean>
	<bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
     <constructor-arg name="name" value="shiro.sesssion"/>
    <property name="path" value="/"/>
   </bean>
	<!-- <bean id="loginTimeOutSessionListener" class="cn.com.acca.nescs.system.domain.authority.LoginTimeOutSessionListener"/> -->
	
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
	</bean>
	
	<bean id="proxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"  
          depends-on="lifecycleBeanPostProcessor">  
        <property name="proxyTargetClass" value="true"/>  
    </bean>  
  
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"/>  
    </bean>

</beans>